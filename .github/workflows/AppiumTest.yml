name: Run Appium Tests on Android Emulator

on:
  workflow_dispatch:

jobs:
  android-emulator:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip lib32stdc++6 lib32z1 qemu-kvm

      - name: Set ANDROID_SDK_ROOT and PATH
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/emulator" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH

      - name: Download Android Command Line Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          rm cmdline-tools.zip

      - name: Accept licenses
        run: |
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Install SDK Packages
        run: |
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "system-images;android-33;google_apis;x86_64" "emulator"

      - name: Create AVD named Akil3
        run: |
          echo "no" | $HOME/android-sdk/cmdline-tools/latest/bin/avdmanager create avd -n Akil3 -k "system-images;android-33;google_apis;x86_64" --force

      - name: Start emulator
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/emulator:$ANDROID_SDK_ROOT/platform-tools:$PATH
          
          echo "Available AVDs:"
          $ANDROID_SDK_ROOT/emulator/emulator -list-avds

          echo "Starting emulator..."
          nohup $ANDROID_SDK_ROOT/emulator/emulator -avd Akil3 -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect > emulator.log 2>&1 &
          
          echo "Waiting for device..."
          adb wait-for-device
          adb shell input keyevent 82

      - name: Run Appium tests
        run: |
          mvn test

      - name: Stop emulator
        if: always()
        env:
          PATH: /home/runner/android-sdk/platform-tools:/home/runner/android-sdk/emulator:$PATH
        run: |
          adb -s emulator-5554 emu kill
